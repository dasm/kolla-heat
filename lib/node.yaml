heat_template_version: 2015-10-15

description: Instance template

parameters:
  ######################################################################
  # Parameters (retrieved from cluster.yaml)
  #
  image:
    type: string
    label: Image name or ID
    description: Image to be used for server.

  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used on the compute instance.

  key_name:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.

  internal_network:
    type: string
    label: Private network name or ID.
    description: Network to attach server to.

  external_network:
    type: string
    rabel: External network name or ID.
    description: Network to attach server to.

  security_groups:
    type: string
    label: SecGroups created in other template.

resources:
  ######################################################################
  # Server resources
  #
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 6000

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  node_eth0:
    type: OS::Neutron::Port
    properties:
      network: { get_param: internal_network }
      security_groups:
      - { get_param: [security_groups, base]}
      - { get_param: [security_groups, kolla]}

  node:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name : { get_param: key_name }
      networks:
        - port: { get_resource: node_eth0 }

      user_data_format: RAW
      user_data:
        str_replace:
          params:
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
            __fixed_ip__: { get_attr: [node_eth0, fixed_ips, 0, ip_address] }
          template: { get_file: scripts/gate_instance.sh }

  floating_ip:
    type: lib/floating_ip.yaml
    properties:
      port: { get_attr: [node, port] }
      external_network: { get_param: external_network }

outputs:
  #name:
  #  description: Name of Gate instance.
  #  value: { get_attr: [node, name] }

  ip_eth0:
    description: The IP address of Gate instance.
    value: { get_attr: [node, first_address] }

  ip_floating:
    value: { get_attr: [floating_ip, floating_ip_address] }

  #port:
  #  description: The network port of Gate instance.
  #  value: { get_resource: port }
